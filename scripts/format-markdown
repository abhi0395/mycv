#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re

def fix_latex_inline(line):
    """
    Replace inline LaTeX like $\sim 30\%$ → ∼30%,
    but preserve $$...$$ blocks.
    """
    def replacer(match):
        content = match.group(1)
        content = content.replace(r"\sim", "∼").replace(r"\%", "%")
        return content

    return re.sub(r"\$(.*?)\$", lambda m: replacer(m), line)

def replace_superscripts(line):
    """
    Replace $$^i$$, $$^c$$, $$^s$$ with Unicode superscripts.
    """
    sup_map = {'i': 'ⁱ', 'c': 'ᶜ', 's': 'ˢ'}
    return re.sub(r"\$\$\^([ics])\$\$", lambda m: sup_map[m.group(1)], line)

if __name__ == "__main__":
    with open("README.md", "r") as f:
        lines = f.read().splitlines()

    results = []
    prev = ""
    for i, line in enumerate(lines):
        stripped = line.strip()

        # Skip unwanted lines
        if stripped.startswith("=") or stripped.startswith("<span> ="):
            continue

        # Fix LaTeX math and superscripts
        line = fix_latex_inline(line)
        line = replace_superscripts(line)

        # Remove blank lines between bullet/numbered list items
        if (
            stripped == "" and
            prev.strip().startswith(("-", "*", "1.")) and
            i + 1 < len(lines) and lines[i + 1].strip().startswith(("-", "*", "1."))
        ):
            continue

        # Collapse multiple blank lines elsewhere
        if stripped == "" and prev.strip() == "":
            continue

        # Convert LaTeX-style section titles starting with **
        if line.startswith("**") and prev.strip() == "":
            parts = line.split("**")
            if len(parts) > 2 and not parts[1].startswith("Anand"):
                results += ["## " + parts[1], ""] + parts[2:]
                prev = line
                continue

        results.append(line)
        prev = line

    with open("README.md", "w") as f:
        f.write("\n".join(results))
